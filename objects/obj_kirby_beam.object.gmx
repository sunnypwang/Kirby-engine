<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_beam_still</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_kirby</parentName>
  <maskName>spr_kirby_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

SPRITES = global.DS_SPRITES_BEAM
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Action Button
if(key_just_action){
    //if floating, return to normal state
    if(floating and not puffing){
        event_user(0)   //Puffing event
    }
    
    else if(ducking and not sliding){
        //Sliding event
        sliding = 1
        hsp = dir * SLIDING_SPD
    }
    
}
if(key_action){    
    action_hold_time += 1
}

//Release event
if(key_release_action){
    if(action_hold_time &gt; BUTTON_HOLD_THRESHOLD){
        hold_action = true
    }
    
    action_hold_time = 0
    
}


//Single Press Action
if(key_just_action){
    //B

    //Dash + B
    
    //Dash + Jump + B
    
    //Up + B
    
    //Down + B
}


//Holding Action
if(key_release_action){
    //Hold B
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch case
loop_animation = true
switch(sprite_index){
    case spr_beam_float: image_index = image_number - 12; break;
    case spr_beam_puff: loop_animation = false; break;
    case spr_beam_fall: image_index = image_number - 2; break;
    case spr_beam_fall2: loop_animation = false; break;
    case spr_beam_bounce : loop_animation = false; break;
    case spr_beam_attack : loop_animation = false; break;
    default:  //do nothing
}



//run this animation once
if(not loop_animation){
    image_speed = 0
    image_index = image_number - 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
