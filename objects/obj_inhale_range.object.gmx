<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inhale_range</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = obj_kirby.dir
x = obj_kirby.x
y = obj_kirby.y
image_xscale = dir
inhaled_enemies = ds_list_create()

ability = ABILITY_NONE

depth = global.enemy_depth


//variable used for calculating enemy sprite trajectory when being inhaled
bound = obj_kirby.INHALING_ENEMY_TIMER
bound_val = sqr(bound)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(inhaled_enemies)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_kirby.x
y = obj_kirby.y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.inhalable) {
    enemy = other
    enemy_obj_idx = enemy.object_index
    hurt_sprite = enemy.hurt_sprite_index
    px = enemy.x
    py = enemy.y
    counter = 0
    print(enemy,object_get_name(enemy_obj_idx))
    ds_list_add(inhaled_enemies, CreateArray(enemy_obj_idx, hurt_sprite, px, py, counter))
    
    
    with obj_kirby event_user(1)

    if (enemy.ability != ABILITY_NONE){
        //ability is a variable that is used to pass to obj_kirby
        //it will store the ability the enemy has
        //it becomes mix if it is already assigned i.e. there are more than one ability in single inhale attempt
        if(ability == ABILITY_NONE) ability = enemy.ability    
        else ability = ABILITY_MIX
        print(ability)
        with obj_kirby {
            transformable = true
            ability = other.ability     // other is this object (obj_inhale_range)
        }  
    }
    instance_destroy(other)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

enemy_count = ds_list_size(inhaled_enemies)
//show_debug_message(enemy_count)
for (var i=0; i&lt;enemy_count; i+=1)
{
    //list of enemy [inhaled_enemy,hurt_sprite,px,py,step_count]
    enemy = inhaled_enemies[| i]
    hurt_sprite = enemy[1]
    px = enemy[2]
    py = enemy[3]
    counter = enemy[4]
    sx = px + (x - px)*(sqr(counter)/bound_val)
    sy = py + (y - py)*(sqr(counter)/bound_val)
    draw_sprite_ext(hurt_sprite, 0, sx, sy, 1, 1, 0, c_white, 1)
    
    //update array in DS list
    enemy[@4] = min(counter+1,bound)
    //show_debug_message(inhaled_enemies[| i])

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
